""" 
   Module to set Jupyter access password from the jupyterPASSWORD environment, if available
   BASED ON: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/jupyter_notebook_config.py
   + default settings, like --ip, --port, --no-browser, --allow-root, etc.
"""
import os
from pkg_resources import get_distribution, parse_version

# `passwd()` have been moved around in ipython>=8.0,
# ref: https://stackoverflow.com/questions/72836985/ipython-passwd-not-able-to-import-with-new-2022-anaconda-download

try:
    from jupyter_server.auth import passwd
except ImportError:
    try:
        from notebook.auth import passwd
    except:
        from IPython.lib import passwd

c = c  # pylint:disable=undefined-variable
app = c.NotebookApp
if parse_version(get_distribution('jupyterlab').version) > parse_version('3.0'):
    app = c.ServerApp

# jupyterlab settings
app.ip = '0.0.0.0'
app.port = int(os.getenv('jupyterPORT', 8888))
app.allow_root = True
app.open_browser = False
app.default_url = '/lab'  # direct to jupyterlab by default

# sets a password if jupyterPASSWORD is set in the environment (>8 characters)
# if no password is set, one has to provide token generated by jupyter
if 'jupyterPASSWORD' in os.environ:
    password = os.environ['jupyterPASSWORD']
    if password and len(password) > 8:
        app.password = passwd(password)
    del os.environ['jupyterPASSWORD']

